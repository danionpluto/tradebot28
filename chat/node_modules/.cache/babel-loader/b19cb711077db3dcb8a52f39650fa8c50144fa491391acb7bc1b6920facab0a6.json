{"ast":null,"code":"var _jsxFileName = \"/Users/danielaramos/Documents/GitHub/tradingchatbot/backend/chat/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [trades, setTrades] = useState([]);\n  const [loadingTrades, setLoadingTrades] = useState(true);\n\n  // get trade data \n\n  useEffect(() => {\n    // fetch trades data from flask backend\n    fetch(\"/api/trades\").then(res => res.json()).then(data => {\n      if (!data.error) {\n        setTrades(data);\n        console.log('got trades');\n      } else {\n        console.error(\"Error loading trades:\", data.error);\n      }\n      setLoadingTrades(false);\n    }).catch(err => {\n      console.error(\"Fetch error:\", err);\n      setLoadingTrades(false);\n    });\n  }, []);\n  console.log(trades);\n  console.log(loadingTrades);\n  // when asking new question, show that one at the bottom\n  const chatContainerRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    const container = chatContainerRef.current;\n    if (container) {\n      container.scrollTop = container.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Generate greeting prompt on first load\n  useEffect(() => {\n    fetch(\"/ask\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        is_first: true\n      })\n    }).then(res => res.json()).then(data => {\n      setMessages([{\n        sender: \"bot\",\n        text: data.answer\n      }]);\n    });\n  }, []);\n\n  // message to send question to API\n  const sendMessage = async () => {\n    const question = input.trim();\n    if (!question) return;\n\n    // Add user message\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: question\n    }]);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      const res = await fetch(\"/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const data = await res.json();\n      if (data.error) {\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: \"Error: \" + data.error\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: data.answer\n        }]);\n      }\n    } catch {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Failed to connect to the backend.\"\n      }]);\n    }\n    setLoading(false);\n  };\n\n  // detect when something is typed in box\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gradient-title\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"TradeBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatContainerRef,\n      style: {\n        height: \"400px\",\n        // fixed height\n        overflowY: \"auto\",\n        // scroll vertically if content overflows\n        border: \"1px solid #ccc\"\n      },\n      children: [messages.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-bubble\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-bubble\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 2,\n        placeholder: \"Type your question and press Enter...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        disabled: loading,\n        className: \"chat-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: loading || !input.trim(),\n        className: \"chat-send-button\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\",\n        maxWidth: \"90vw\",\n        minHeight: '300px',\n        maxHeight: \"400px\",\n        // limit max height\n        overflowX: \"auto\",\n        // scroll horizontally if needed\n        overflowY: \"auto\",\n        // scroll vertically if needed\n        backgroundColor: \"white\",\n        padding: '1rem',\n        border: \"1px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: 'black'\n        },\n        children: \"Trade Sample Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), loadingTrades ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading trade data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this) : trades.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trade data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        cellSpacing: \"0\",\n        style: {\n          borderStyle: 'dotted',\n          borderColor: 'white',\n          fontFamily: 'Inter',\n          borderCollapse: \"collapse\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(trades[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                backgroundColor: \"#eee\"\n              },\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: trades.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this))\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fQl+RarUNihxQ7PSSY5ADULIEtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","loading","setLoading","trades","setTrades","loadingTrades","setLoadingTrades","fetch","then","res","json","data","error","console","log","catch","err","chatContainerRef","messagesEndRef","scrollToBottom","container","current","scrollTop","scrollHeight","method","headers","body","JSON","stringify","is_first","sender","text","answer","sendMessage","question","trim","prev","handleKeyDown","e","key","shiftKey","preventDefault","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","overflowY","border","length","map","msg","idx","rows","placeholder","value","onChange","target","onKeyDown","disabled","onClick","marginTop","maxWidth","minHeight","maxHeight","overflowX","backgroundColor","padding","color","cellPadding","cellSpacing","borderStyle","borderColor","fontFamily","borderCollapse","width","Object","keys","row","values","val","i","_c","$RefreshReg$"],"sources":["/Users/danielaramos/Documents/GitHub/tradingchatbot/backend/chat/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [trades, setTrades] = useState([]);\n  const [loadingTrades, setLoadingTrades] = useState(true);\n\n  // get trade data \n\n  useEffect(() => {\n    // fetch trades data from flask backend\n    fetch(\"/api/trades\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          setTrades(data);\n          console.log('got trades');\n\n        } else {\n          console.error(\"Error loading trades:\", data.error);\n        }\n        setLoadingTrades(false);\n      })\n      .catch((err) => {\n        console.error(\"Fetch error:\", err);\n        setLoadingTrades(false);\n      });\n  }, []);\n\n  console.log(trades);\n  console.log(loadingTrades);\n  // when asking new question, show that one at the bottom\n  const chatContainerRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n  const container = chatContainerRef.current;\n  if (container) {\n    container.scrollTop = container.scrollHeight;\n  }\n};\n\nuseEffect(() => {\n  scrollToBottom();\n}, [messages]);\n\n  // Generate greeting prompt on first load\n  useEffect(() => {\n    fetch(\"/ask\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ is_first: true }),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setMessages([{ sender: \"bot\", text: data.answer }]);\n      });\n  }, []);\n\n  // message to send question to API\n  const sendMessage = async () => {\n    const question = input.trim();\n    if (!question) return;\n\n    // Add user message\n    setMessages((prev) => [...prev, { sender: \"user\", text: question }]);\n    setInput(\"\");\n    setLoading(true);\n\n    try {\n      const res = await fetch(\"/ask\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question }),\n      });\n      const data = await res.json();\n      if (data.error) {\n        setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error: \" + data.error }]);\n      } else {\n        setMessages((prev) => [...prev, { sender: \"bot\", text: data.answer }]);\n      }\n    } catch {\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Failed to connect to the backend.\" }]);\n    }\n\n    setLoading(false);\n  };\n\n  // detect when something is typed in box\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"App\" >\n      <h1 className='gradient-title' style={{ textAlign: \"center\" }}>TradeBot</h1>\n      <div className=\"chat-window\" ref={chatContainerRef}\n  style={{\n    height: \"400px\",      // fixed height\n    overflowY: \"auto\",   // scroll vertically if content overflows\n    border: \"1px solid #ccc\",\n  }}>\n        {messages.length === 0 && !loading && (\n          <div className=\"chat-loading\"></div>\n        )}\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`chat-message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`}>\n            <div className=\"chat-bubble\">{msg.text}</div>\n          </div>\n        ))}\n        {loading && (\n          <div className=\"chat-message bot\">\n            <div className=\"chat-bubble\">...</div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <div className='submit-question'>\n        <textarea rows={2} placeholder=\"Type your question and press Enter...\" value={input}\n          onChange={(e) => setInput(e.target.value)} onKeyDown={handleKeyDown} disabled={loading}\n          className=\"chat-input\"\n        />\n        <button onClick={sendMessage} disabled={loading || !input.trim()} className=\"chat-send-button\">\n          <span className=\"arrow\">➤</span>\n        </button>\n\n      </div>\n\n\n\n\n      {/* Display trade data table below chat */}\n      <div style={{ marginTop: \"2rem\",\n        maxWidth: \"90vw\",\n        minHeight: '300px',\n        maxHeight: \"400px\",        // limit max height\n        overflowX: \"auto\",        // scroll horizontally if needed\n        overflowY: \"auto\",        // scroll vertically if needed\n        backgroundColor: \"white\",\n        padding: '1rem',\n        border: \"1px solid black\", }}>\n        <h3 style = {{color:'black'}}>Trade Sample Data</h3>\n        {loadingTrades ? (\n          <p>Loading trade data...</p>\n        ) : trades.length === 0 ? (\n          <p>No trade data available.</p>\n        ) : (\n          <table\n            border=\"1\"\n            cellPadding=\"5\"\n            cellSpacing=\"0\"\n            style={{ borderStyle: 'dotted', borderColor: 'white', fontFamily: 'Inter', borderCollapse: \"collapse\", width: \"100%\" }}\n          >\n            <thead>\n              <tr>\n                {Object.keys(trades[0]).map((key) => (\n                  <th key={key} style={{ backgroundColor: \"#eee\" }}>\n                    {key}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {trades.map((row, idx) => (\n                <tr key={idx}>\n                  {Object.values(row).map((val, i) => (\n                    <td key={i}>{val}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}